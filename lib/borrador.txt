Scaffold(
          body: Container(
        child: new Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: <Widget>[
                Text(
                  'CITAPP',
                  style: TextStyle(
                    fontFamily: 'MyFont',
                  ),
                ),
              ],
            ),
            const Text.rich(
              TextSpan(
                children: <TextSpan>[
                  TextSpan(
                    text: 'Selecciones un modo:',
                    style: TextStyle(fontStyle: FontStyle.italic),
                  ),
                ],
              ),
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: <Widget>[
                new RaisedButton(
                    color: Colors.blueGrey,
                    textColor: Colors.white,
                    child: Text(
                      "Paciente",
                      style: TextStyle(fontSize: 20.0),
                    ),
                    onPressed: () {}),
              ],
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: <Widget>[
                new RaisedButton(
                    color: Colors.blueGrey,
                    textColor: Colors.white,
                    child: Text(
                      "Doctor",
                      style: TextStyle(fontSize: 20.0),
                    ),
                    onPressed: () {}),
              ],
            )
          ],
        ),
      )),


//Dialogo Alert
Future<void> _showMyDialog() async {
  return showDialog<void>(
    context: context,
    barrierDismissible: false, // user must tap button!
    builder: (BuildContext context) {
      return AlertDialog(
        title: Text('AlertDialog Title'),
        content: SingleChildScrollView(
          child: ListBody(
            children: <Widget>[
              Text('This is a demo alert dialog.'),
              Text('Would you like to approve of this message?'),
            ],
          ),
        ),
        actions: <Widget>[
          TextButton(
            child: Text('Approve'),
            onPressed: () {
              Navigator.of(context).pop();
            },
          ),
        ],
      );
    },
  );
}



class AddUser extends StatelessWidget {
  final String fullName;
  final String company;
  final int age;

  AddUser(this.fullName, this.company, this.age);

  @override
  Widget build(BuildContext context) {
    // Create a CollectionReference called users that references the firestore collection
    CollectionReference users = FirebaseFirestore.instance.collection('users');

    Future<void> addUser() {
      // Call the user's CollectionReference to add a new user
      return users
          .add({
            'full_name': fullName, // John Doe
            'company': company, // Stokes and Sons
            'age': age // 42
          })
          .then((value) => print("User Added"))
          .catchError((error) => print("Failed to add user: $error"));
    }

    return FlatButton(
      onPressed: addUser,
      child: Text(
        "Add User",
      ),
    );
  }
}


return new Scaffold(
      body: new Center(
        child: Padding(
          padding: const EdgeInsets.all(15.0),
        child: Material(
          elevation: 7.0,
          borderRadius: BorderRadius.circular(7.0),
          child: Container(
            height: 170,
            child: Padding(
              padding: EdgeInsets.all(10.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: <Widget>[
                  Text("Nombre: Juan Perez"),
                  SizedBox(height: 10.0),
                  Container(
                    height:0.5,
                    width:double.infinity,
                    color: Colors.red,
                  ),
                  SizedBox(height: 15.0),
                  Text("Fecha: 2020-10-15"),
                  SizedBox(height: 15.0),
                  Text("Hora: 15:15"),
                  SizedBox(height: 15.0),
                  Text("Status: Espera"),
                ],
              )
            )
          )
          )
        )
      )
    );//Aqui


consulta simple

var citiesRef = db.collection("cities");

var query = citiesRef.where("capital", "==", true);

ejecuta consulta

db.collection("cities").where("capital", "==", true)
    .get()
    .then(function(querySnapshot) {
        querySnapshot.forEach(function(doc) {
            // doc.data() is never undefined for query doc snapshots
            console.log(doc.id, " => ", doc.data());
        });
    })
    .catch(function(error) {
        console.log("Error getting documents: ", error);
    });







/*
    Scaffold(
      body: Center(
          child: DataTable(
        columns: const <DataColumn>[
          DataColumn(
            label: Text(
              'Nombre',
              style: TextStyle(fontStyle: FontStyle.italic),
            ),
          ),
          DataColumn(
            label: Text(
              'Fecha y hora',
              style: TextStyle(fontStyle: FontStyle.italic),
            ),
          ),
          DataColumn(
            label: Text(
              'Estado',
              style: TextStyle(fontStyle: FontStyle.italic),
            ),
          ),
        ],
        rows: const <DataRow>[
          DataRow(
            cells: <DataCell>[
              DataCell(Text('Sarah')),
              DataCell(Text('19')),
              DataCell(Text('Student')),
            ],
          ),
          DataRow(
            cells: <DataCell>[
              DataCell(Text('Janine')),
              DataCell(Text('43')),
              DataCell(Text('Professor')),
            ],
          ),
          DataRow(
            cells: <DataCell>[
              DataCell(Text('William')),
              DataCell(Text('27')),
              DataCell(Text('Associate Professor')),
            ],
          ),
        ],
      )),
    );


    Container(
      height: 130,
      width: 250,
      margin: EdgeInsets.all(20.0),
      decoration: BoxDecoration(
        color: Colors.orange,
        shape: BoxShape.rectangle,
        borderRadius: BorderRadius.only(
        topLeft: Radius.circular(25.0),
        bottomRight: Radius.circular(25.0))),
      child: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text("Nombre: Juan Perez"),Text(""),
            Text("Fecha: 2020-10-15"), Text(""),
            Text("Status: Espera")
          ]
        ),
      )
    );

    */


    /*
db.collection('consultas')
          .get()
          .then(querySnapshot => {
            const documents = querySnapshot.docs.map(doc => doc.data())
            // do something with documents
          })

    cities.where(dynamic isEqualTo: "estado", )
        .get()
        .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
            @Override
            public void onComplete(@NonNull Task<QuerySnapshot> task) {
                if (task.isSuccessful()) {
                    for (QueryDocumentSnapshot document : task.getResult()) {
                        Log.d(TAG, document.getId() + " => " + document.getData());
                    }
                } else {
                    Log.d(TAG, "Error getting documents: ", task.getException());
                }
            }
        });*/

PARA CONSULTA Y CUADROS}
Widget quer() {
    FirebaseFirestore db = FirebaseFirestore.instance;

    db.collection("consultas").get().then((querySnapshot) {
      querySnapshot.docs.forEach((result) {
        /*print(result.data());
        print(result.get("nombre"));
        this.nombre = result.get("nombre");
        this.apellido = result.get("apellido");
        this.estado = result.get("estado");
        this.fecha = result.get("fecha");
        this.hora = result.get("hora");
        this.motivo = result.get("motivo");*/
        _cuadros(
            result.get("nombre"),
            result.get("apellido"),
            result.get("estado"),
            result.get("fecha"),
            result.get("hora"),
            result.get("motivo"));
      });
    });
  }

  //Widget de dise√±o para el contenedor donde mostrara todos los pacientes que han reservado
  Widget _cuadros(String nombre, apellido, estado, fecha, hora, motivo) {
    return new Scaffold(
        body: new Center(
            child: Padding(
                padding: const EdgeInsets.all(15.0),
                child: Material(
                    elevation: 7.0,
                    borderRadius: BorderRadius.circular(7.0),
                    child: Container(
                        height: 170,
                        width: 250,
                        child: Padding(
                            padding: EdgeInsets.all(10.0),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: <Widget>[
                                Text("Nombre: " + nombre + " " + apellido),
                                SizedBox(height: 10.0),
                                Container(
                                  height: 0.5,
                                  width: double.infinity,
                                  color: Colors.red,
                                ),
                                SizedBox(height: 15.0),
                                Text("Fecha: " + fecha),
                                SizedBox(height: 15.0),
                                Text("Hora: " + hora),
                                SizedBox(height: 15.0),
                                Text("Status: " + estado),
                                SizedBox(height: 15.0),
                                Text("Motivo: " + motivo),
                              ],
                            ))))))); //Aqui
  }

